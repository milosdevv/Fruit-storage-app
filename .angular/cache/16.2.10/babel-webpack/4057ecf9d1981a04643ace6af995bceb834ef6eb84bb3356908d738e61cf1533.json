{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SupplierService } from '../services/supplier.service';\nexport let DashboardComponent = class DashboardComponent {\n  constructor() {\n    this.showCreateSupplierForm = false;\n    this.http = inject(HttpClient);\n    this.allSuppliers = [];\n    this.supplierService = inject(SupplierService);\n    this.currentSupplierId = '';\n    this.editMode = false;\n  }\n  ngOnInit() {\n    this.fetchAllTasks();\n  }\n  OpenCreateSupplierForm() {\n    this.showCreateSupplierForm = true;\n    this.editMode = false;\n    this.selectedSupplier = {\n      supplierName: '',\n      supplierSurname: '',\n      supplierPhoneNumber: '',\n      supplierDateOfArrival: '',\n      supplierBeginDestination: '',\n      supplierFinalDestination: '',\n      supplierPriority: '',\n      supplierStatus: ''\n    };\n  }\n  onEditSupplierClick(id) {\n    this.currentSupplierId = id;\n    this.showCreateSupplierForm = true;\n    this.editMode = true;\n    this.selectedSupplier = this.allSuppliers.find(supplier => {\n      return supplier.id === id;\n    });\n  }\n  CloseCreateSupplierForm() {\n    this.showCreateSupplierForm = false;\n  }\n  // HTTP Methods\n  createOrUpdateSupplier(supplier) {\n    if (!this.editMode) this.supplierService.createSupplier(supplier);else this.supplierService.UpdateSupplier(this.currentSupplierId, supplier);\n    this.fetchAllTasks();\n  }\n  deleteSupplier(id) {\n    this.supplierService.deleteSupplier(id);\n    this.fetchAllTasks();\n  }\n  deleteAllSuppliers() {\n    this.supplierService.deleteAllSuppliers();\n    this.fetchAllTasks();\n  }\n  fetchAllTasks() {\n    this.supplierService.getAllSuppliers().subscribe(suppliers => {\n      this.allSuppliers = suppliers;\n    });\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);","map":{"version":3,"names":["Component","inject","HttpClient","SupplierService","DashboardComponent","constructor","showCreateSupplierForm","http","allSuppliers","supplierService","currentSupplierId","editMode","ngOnInit","fetchAllTasks","OpenCreateSupplierForm","selectedSupplier","supplierName","supplierSurname","supplierPhoneNumber","supplierDateOfArrival","supplierBeginDestination","supplierFinalDestination","supplierPriority","supplierStatus","onEditSupplierClick","id","find","supplier","CloseCreateSupplierForm","createOrUpdateSupplier","createSupplier","UpdateSupplier","deleteSupplier","deleteAllSuppliers","getAllSuppliers","subscribe","suppliers","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\milos\\Desktop\\fruit magacine app\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport { Supplier } from '../Model/Supplier';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport { SupplierService } from '../services/supplier.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit{\n  showCreateSupplierForm: boolean = false;\n  http:HttpClient = inject(HttpClient);\n  allSuppliers: Supplier[] = [];\n  supplierService:SupplierService = inject(SupplierService);\n  currentSupplierId:string = '';\n\n  editMode:boolean = false;\n  selectedSupplier:Supplier;\n  ngOnInit(): void {\n    this.fetchAllTasks()\n  }\n\n  OpenCreateSupplierForm(){\n    this.showCreateSupplierForm = true;\n    this.editMode = false;\n    this.selectedSupplier = {\n      supplierName: '',\n      supplierSurname: '',\n      supplierPhoneNumber: '', \n      supplierDateOfArrival: '',\n      supplierBeginDestination: '',\n      supplierFinalDestination: '',\n      supplierPriority: '',\n      supplierStatus: ''\n  };\n  \n  }\n\n  onEditSupplierClick(id:string | undefined){\n    this.currentSupplierId = id;\n    this.showCreateSupplierForm = true;\n    this.editMode = true;\n\n  this.selectedSupplier = this.allSuppliers.find((supplier) => {\n      return supplier.id === id;\n    })\n  }\n\n  CloseCreateSupplierForm(){\n    this.showCreateSupplierForm = false;\n  }\n\n  // HTTP Methods\n  createOrUpdateSupplier(supplier: Supplier) {\n    if(!this.editMode) this.supplierService.createSupplier(supplier);\n    else \n    this.supplierService.UpdateSupplier(this.currentSupplierId, supplier)\n    this.fetchAllTasks()\n  }\n\n  deleteSupplier(id: string | undefined) {\n    this.supplierService.deleteSupplier(id)\n    this.fetchAllTasks()\n  }\n\n  deleteAllSuppliers(){\n    this.supplierService.deleteAllSuppliers()\n    this.fetchAllTasks()\n}\n\nprivate fetchAllTasks() {\n  this.supplierService.getAllSuppliers().subscribe((suppliers) => {\n    this.allSuppliers = suppliers;\n  });\n}\n}"],"mappings":";AAAA,SAASA,SAAS,EAAUC,MAAM,QAAQ,eAAe;AAEzD,SAASC,UAAU,QAAqB,sBAAsB;AAE9D,SAASC,eAAe,QAAQ,8BAA8B;AAOvD,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAAxBC,YAAA;IACL,KAAAC,sBAAsB,GAAY,KAAK;IACvC,KAAAC,IAAI,GAAcN,MAAM,CAACC,UAAU,CAAC;IACpC,KAAAM,YAAY,GAAe,EAAE;IAC7B,KAAAC,eAAe,GAAmBR,MAAM,CAACE,eAAe,CAAC;IACzD,KAAAO,iBAAiB,GAAU,EAAE;IAE7B,KAAAC,QAAQ,GAAW,KAAK;EA2D1B;EAzDEC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAC,sBAAsBA,CAAA;IACpB,IAAI,CAACR,sBAAsB,GAAG,IAAI;IAClC,IAAI,CAACK,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACI,gBAAgB,GAAG;MACtBC,YAAY,EAAE,EAAE;MAChBC,eAAe,EAAE,EAAE;MACnBC,mBAAmB,EAAE,EAAE;MACvBC,qBAAqB,EAAE,EAAE;MACzBC,wBAAwB,EAAE,EAAE;MAC5BC,wBAAwB,EAAE,EAAE;MAC5BC,gBAAgB,EAAE,EAAE;MACpBC,cAAc,EAAE;KACnB;EAED;EAEAC,mBAAmBA,CAACC,EAAqB;IACvC,IAAI,CAACf,iBAAiB,GAAGe,EAAE;IAC3B,IAAI,CAACnB,sBAAsB,GAAG,IAAI;IAClC,IAAI,CAACK,QAAQ,GAAG,IAAI;IAEtB,IAAI,CAACI,gBAAgB,GAAG,IAAI,CAACP,YAAY,CAACkB,IAAI,CAAEC,QAAQ,IAAI;MACxD,OAAOA,QAAQ,CAACF,EAAE,KAAKA,EAAE;IAC3B,CAAC,CAAC;EACJ;EAEAG,uBAAuBA,CAAA;IACrB,IAAI,CAACtB,sBAAsB,GAAG,KAAK;EACrC;EAEA;EACAuB,sBAAsBA,CAACF,QAAkB;IACvC,IAAG,CAAC,IAAI,CAAChB,QAAQ,EAAE,IAAI,CAACF,eAAe,CAACqB,cAAc,CAACH,QAAQ,CAAC,CAAC,KAEjE,IAAI,CAAClB,eAAe,CAACsB,cAAc,CAAC,IAAI,CAACrB,iBAAiB,EAAEiB,QAAQ,CAAC;IACrE,IAAI,CAACd,aAAa,EAAE;EACtB;EAEAmB,cAAcA,CAACP,EAAsB;IACnC,IAAI,CAAChB,eAAe,CAACuB,cAAc,CAACP,EAAE,CAAC;IACvC,IAAI,CAACZ,aAAa,EAAE;EACtB;EAEAoB,kBAAkBA,CAAA;IAChB,IAAI,CAACxB,eAAe,CAACwB,kBAAkB,EAAE;IACzC,IAAI,CAACpB,aAAa,EAAE;EACxB;EAEQA,aAAaA,CAAA;IACnB,IAAI,CAACJ,eAAe,CAACyB,eAAe,EAAE,CAACC,SAAS,CAAEC,SAAS,IAAI;MAC7D,IAAI,CAAC5B,YAAY,GAAG4B,SAAS;IAC/B,CAAC,CAAC;EACJ;CACC;AAlEYhC,kBAAkB,GAAAiC,UAAA,EAL9BrC,SAAS,CAAC;EACTsC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWpC,kBAAkB,CAkE9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}