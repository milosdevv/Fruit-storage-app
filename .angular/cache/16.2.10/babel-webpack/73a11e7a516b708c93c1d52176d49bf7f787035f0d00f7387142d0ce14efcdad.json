{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let SupplierService = /*#__PURE__*/(() => {\n  class SupplierService {\n    constructor() {\n      this.http = inject(HttpClient);\n    }\n    createSupplier(supplier) {\n      const headers = new HttpHeaders({\n        'supplier': 'new-supplier'\n      });\n      return this.http.post('https://fruitmagacine-default-rtdb.firebaseio.com/suppliers.json', supplier, {\n        headers: headers\n      });\n    }\n    deleteSupplier(id) {\n      return this.http.delete(`https://fruitmagacine-default-rtdb.firebaseio.com/suppliers/${id}.json`);\n    }\n    deleteAllSuppliers() {\n      return this.http.delete('https://fruitmagacine-default-rtdb.firebaseio.com/suppliers.json');\n    }\n    UpdateSupplier(id, supplier) {\n      return this.http.put(`https://fruitmagacine-default-rtdb.firebaseio.com/suppliers/${id}.json`, supplier);\n    }\n    getAllSuppliers() {\n      return this.http.get('https://fruitmagacine-default-rtdb.firebaseio.com/suppliers.json').pipe(map(response => {\n        let suppliers = [];\n        for (let key in response) {\n          if (response.hasOwnProperty(key)) {\n            suppliers.push({\n              ...response[key],\n              id: key\n            });\n          }\n        }\n        return suppliers;\n      }));\n    }\n    static #_ = this.ɵfac = function SupplierService_Factory(t) {\n      return new (t || SupplierService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SupplierService,\n      factory: SupplierService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return SupplierService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}