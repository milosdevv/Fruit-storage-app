{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor() {\n      this.http = inject(HttpClient);\n    }\n    createProduct(product) {\n      return this.http.post('https://fruitmagacine-default-rtdb.firebaseio.com/products.json', product);\n    }\n    deleteProduct(id) {\n      return this.http.delete(`https://fruitmagacine-default-rtdb.firebaseio.com/products/${id}.json`);\n    }\n    deleteAllProducts() {\n      return this.http.delete('https://fruitmagacine-default-rtdb.firebaseio.com/products.json');\n    }\n    updateProduct(id, product) {\n      this.http.put(`https://fruitmagacine-default-rtdb.firebaseio.com/products/${id}.json`, product).subscribe();\n    }\n    getAllproducts() {\n      return this.http.get('https://fruitmagacine-default-rtdb.firebaseio.com/products.json').pipe(map(response => {\n        let products = [];\n        for (let key in response) {\n          if (response.hasOwnProperty(key)) {\n            products.push({\n              ...response[key],\n              id: key\n            });\n          }\n        }\n        return products;\n      }));\n    }\n    static #_ = this.ɵfac = function ProductService_Factory(t) {\n      return new (t || ProductService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProductService,\n      factory: ProductService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}